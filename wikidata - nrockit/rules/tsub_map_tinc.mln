//Syntax: declare numerical constants as 'int' not 'Integer'
pinst(s, p, o, int, int, valid)
*pinstConf(s, p, o, int, int, valid, float_)
conf: !pinstConf(s, p, o, i1, i2, valid, conf) v pinst(s, p, o, i1, i2, valid)

*sameAs(x, x)

// intervals must be consistent, otherwise record a conflict
consistent(i1,i2) := [i1 <= i2]
!pinst(s, p, o, i1, i2, valid) v consistent(i1,i2).


before(i1,i2,i3,i4) := [i2 < i3]
validLifeSpan(i1, i2) := [(i2 - i1) < 15000]
aboveSixteen(birth, other) := [(other - birth) > 1600]
belowFifty(birth, other) := [(other - birth) < 5000]
// meets(i1,i2,i3,i4) := []
// overlaps(i1,i2,i3,i4) := []
// starts(i1,i2,i3,i4) := []
// during(i1,i2,i3,i4) := []
// finishes(i1,i2,i3,i4) := []
equal(i1,i2,i3,i4) := [(i1 == i3) && (i2 == i4)]
disjoint(i1,i2,i3,i4) := [(i2 < i3) || (i4 < i1)]
// intersects(i1,i2,i3,i4) := []

// total inconsistency


// C0 intervals for two property assertions (with the same subject and same property) conflict
!pinst(x, p, y, i1, i2, valid) v !pinst(x, p, z, i3, i4, valid) v sameAs(y, z) v disjoint(i1,i2,i3,i4).


// C1. A person cannot have two birth dates
!pinst(x, "P569", y, i1, i2, valid) v !pinst(x, "P569", z, i3, i4, valid) v sameAs(y, z).

// C2. A person cannot have two death dates
!pinst(x, "P570", y, i1, i2, valid) v !pinst(x, "P570", z, i3, i4, valid) v sameAs(y, z).

// C3. A person's birth date is before his/her death date
!pinst(x, "P569", y, i1, i2, valid) v !pinst(x, "P570", z, i3, i4, valid) v before(i1,i2,i3,i4).
!pinst(x, "P569", y, i1, i2, valid) v !pinst(x, "P570", z, i3, i4, valid) v validLifeSpan(i1, i3).

// C4. A person must be born before playing for a team.
!pinst(x, "P569", y, i1, i2, valid) v !pinst(x, "P54", z, i3, i4, valid) v before(i1, i2, i3, i4).

// C5. A person must be alive to play for a team.
!pinst(x, "P570", y, i1, i2, valid) v !pinst(x, "P54", z, i3, i4, valid) v before(i3, i4, i1, i2).

// C6. A person must be atleast 16 before playing for a premier league club.
!pinst(x, "P569", y, i1, i2, valid) v !pinst(x, "P54", z, i3, i4, valid) v aboveSixteen(i1, i3).

// C7. Someone who is older than 50 years does not play in a club.
!pinst(x, "P569", y, i1, i2, valid) v !pinst(x, "P54", z, i3, i4, valid) v belowFifty(i1, i4).

// C8. A footballer cannot play for two different clubs at the same time/period.
!pinst(x, "P54", y, i1, i2, valid) v !pinst(x, "P54", z, i3, i4, valid) v sameAs(y, z) v disjoint(i1,i2,i3,i4).

// C14. A person cannot be married to two distinct individuals.
!pinst(x, "P26", y, i1, i2, valid) v !pinst(x, "P26", z, i3, i4, valid) v sameAs(y, z) v disjoint(i1,i2,i3,i4).

// C15. Constraint #14 with exchanged arguments.
!pinst(y, "P26", x, i1, i2, valid) v !pinst(z, "P26", x, i3, i4, valid) v sameAs(y, z) v disjoint(i1,i2,i3,i4).

// C16. A person must be born before getting married.
!pinst(x, "P569", y, i1, i2, valid) v !pinst(x, "P26", z, i3, i4, valid) v before(i1, i2, i3, i4).

// C17. A person must be alive to be married.
!pinst(x, "P570", y, i1, i2, valid) v !pinst(x, "P26", z, i3, i4, valid) v before(i3, i4, i1, i2).

// C18. A person cannot be both a player and a coach at the same time.
!pinst(x, "P54", y, i1, i2, valid) v !pinst(x, "P286", z, i3, i4, valid) v disjoint(i1,i2,i3,i4).

// C19. A person cannot work for two companies at the same time.
!pinst(x, "P108", y, i1, i2, valid) v !pinst(x, "P108", z, i3, i4, valid) v sameAs(y, z) v disjoint(i1,i2,i3,i4).
